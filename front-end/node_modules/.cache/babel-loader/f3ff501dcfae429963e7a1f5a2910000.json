{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = 'http://localhost:4000/api/users';\n/**\n* @description function to get list of all users from the DB\n*/\n\nexport const getUsers = async () => {\n  try {\n    const response = await axios.get(baseUrl);\n    return response;\n  } catch (error) {\n    return error.response;\n  }\n};\n/**\n* @description function to authenticate user\n*/\n\nexport const authenticateUser = async credentials => {\n  try {\n    const response = await axios.post(`${baseUrl}/login`, {\n      email: credentials.email,\n      password: credentials.password\n    });\n    return response;\n  } catch (error) {\n    return error.response;\n  }\n};\n/**\n* @description function to get the loggedin user from the localstorage\n*/\n\nexport const getAuthedUser = async () => {\n  try {\n    let authedUser = localStorage.getItem('authedUser');\n\n    if (authedUser === null) {\n      let user = {\n        authedUser: {\n          id: null,\n          userToken: null,\n          userType: null\n        },\n        userDetails: null\n      };\n      await setLocalStorage(user.authedUser);\n      return user;\n    } else {\n      let id = JSON.parse(authedUser).id;\n\n      if (id === null) {\n        return {\n          userDetails: null,\n          authedUser: JSON.parse(authedUser)\n        };\n      } else {\n        let userDetails = await getUserDetails(id);\n        return {\n          userDetails,\n          authedUser: JSON.parse(authedUser)\n        };\n      }\n    }\n  } catch (error) {\n    alert('Some error occured! Try again');\n  }\n};\n/**\n* @description function to get details of particular user\n*/\n\nexport const getUserDetails = async id => {\n  try {\n    const response = await axios.get(`${baseUrl}/${id}`);\n    return response.data;\n  } catch (error) {\n    return error.response;\n  }\n};\n/**\n* @description function to register a user\n*/\n\nexport const registerUser = async userDetails => {\n  try {\n    const response = await axios.post(baseUrl, userDetails);\n    return response;\n  } catch (error) {\n    return error.response;\n  }\n};\n/**\n* @description function to update details of a user\n*/\n\nexport const updateUserDetails = async (userDetails, id, updatorId) => {\n  try {\n    const response = await axios.put(`${baseUrl}/${id}`, { ...userDetails,\n      id: updatorId\n    });\n    return response;\n  } catch (error) {\n    return error.response;\n  }\n};\nexport const deleteUser = async id => {\n  try {\n    const response = await axios.delete(`${baseUrl}/${id}`);\n    return response;\n  } catch (error) {\n    return error.response;\n  }\n};\nexport const setLocalStorage = async user => {\n  try {\n    await localStorage.clear();\n    return localStorage.setItem('authedUser', JSON.stringify(user));\n  } catch (error) {\n    alert('Some error occured! Try again');\n  }\n};\nexport const clearLocalStorage = () => {\n  return localStorage.clear();\n};","map":{"version":3,"sources":["/home/vaniket_shashikant/other/course/React/assignment-ironlist/front-end/src/utils/api.js"],"names":["axios","baseUrl","getUsers","response","get","error","authenticateUser","credentials","post","email","password","getAuthedUser","authedUser","localStorage","getItem","user","id","userToken","userType","userDetails","setLocalStorage","JSON","parse","getUserDetails","alert","data","registerUser","updateUserDetails","updatorId","put","deleteUser","delete","clear","setItem","stringify","clearLocalStorage"],"mappings":"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","sourcesContent":["import axios from 'axios';\nconst baseUrl = 'http://localhost:4000/api/users';\n\n/**\n* @description function to get list of all users from the DB\n*/\nexport const getUsers = async () => {\n    try {\n        const response = await axios.get(baseUrl);\n        return response;\n    }\n    catch (error) {\n        return error.response;\n    }\n}\n\n/**\n* @description function to authenticate user\n*/\nexport const authenticateUser = async (credentials) => {\n    try {\n        const response = await axios.post(`${baseUrl}/login`, {\n            email: credentials.email,\n            password: credentials.password,\n        })\n        return response;\n    }\n    catch (error) {\n        return error.response;\n    }\n}\n\n/**\n* @description function to get the loggedin user from the localstorage\n*/\nexport const getAuthedUser = async () => {\n    try {\n        let authedUser = localStorage.getItem('authedUser');\n        if (authedUser === null) {\n            let user = {\n                authedUser: {\n                    id: null,\n                    userToken: null,\n                    userType: null,\n                },\n                userDetails: null\n            }\n            await setLocalStorage(user.authedUser);\n            return user;\n        }\n        else {\n            let id = JSON.parse(authedUser).id;\n            if (id === null) {\n                return {\n                    userDetails: null,\n                    authedUser: JSON.parse(authedUser)\n                }\n            }\n            else {\n                let userDetails = await getUserDetails(id);\n                return {\n                    userDetails,\n                    authedUser: JSON.parse(authedUser)\n                }\n            }\n\n        }\n    }\n    catch (error) {\n        alert('Some error occured! Try again');\n    }\n}\n\n/**\n* @description function to get details of particular user\n*/\nexport const getUserDetails = async (id) => {\n    try {\n        const response = await axios.get(`${baseUrl}/${id}`)\n        return response.data;\n    }\n    catch (error) {\n        return error.response;\n    }\n}\n\n\n/**\n* @description function to register a user\n*/\nexport const registerUser = async (userDetails) => {\n    try {\n        const response = await axios.post(baseUrl, userDetails)\n        return response;\n    }\n    catch (error) {\n        return error.response;\n    }\n}\n\n/**\n* @description function to update details of a user\n*/\nexport const updateUserDetails = async (userDetails, id, updatorId) => {\n    try {\n        const response = await axios.put(`${baseUrl}/${id}`, {\n            ...userDetails,\n            id: updatorId\n        })\n        return response;\n    }\n    catch (error) {\n        return error.response;\n    }\n}\n\nexport const deleteUser = async (id) => {\n    try {\n        const response = await axios.delete(`${baseUrl}/${id}`)\n        return response;\n    }\n    catch (error) {\n        return error.response;\n    }\n}\n\nexport const setLocalStorage = async (user) => {\n    try {\n        await localStorage.clear();\n        return localStorage.setItem('authedUser', JSON.stringify(user));\n    }\n    catch (error) {\n        alert('Some error occured! Try again');\n    }\n}\n\n\nexport const clearLocalStorage = () => {\n    return localStorage.clear();\n}\n\n"]},"metadata":{},"sourceType":"module"}