{"ast":null,"code":"var _jsxFileName = \"/home/vaniket_shashikant/other/course/React/assignment-ironlist/front-end/src/components/AdminEmployeeList.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Card, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { getUsers, deleteUser } from '../utils/api';\n\nconst AdminEmployeeList = props => {\n  const [employeeList, setEmployeeList] = useState([]);\n  const {\n    authedUserDetails\n  } = props;\n\n  async function fetchUsers() {\n    const response = await getUsers();\n    console.log(response.data);\n\n    if (response.status === 200) {\n      setEmployeeList(response.data);\n    } else {\n      // onError(response.data)\n      alert('Some Error occured! Try again');\n    }\n  }\n\n  useEffect(() => {\n    console.log('admin list useeffect');\n    fetchUsers();\n  }, []);\n\n  const handleDelete = async employee => {\n    console.log(employee);\n    const response = await deleteUser(employee._id);\n\n    if (response.status == 200) {\n      alert('Deleted');\n      await fetchUsers();\n    } else {\n      alert('Some error occured');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, employeeList.map(employee => /*#__PURE__*/React.createElement(Card, {\n    key: employee._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }\n  }, `Name: ${employee.firstName} ${employee.lastName}`), /*#__PURE__*/React.createElement(Card.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }\n  }, `Email: ${employee.email}`), /*#__PURE__*/React.createElement(Card.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }, `Mobile: ${employee.mobile}`), /*#__PURE__*/React.createElement(Card.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }, \"Permissions:\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  }, employee.permissions.canRead && /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 33\n    }\n  }, \"Can View Employee List\"), employee.permissions.canCreate && /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 33\n    }\n  }, \"Can add a new Employee\"), employee.permissions.canUpdate && /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 33\n    }\n  }, \"Can Update Employee\"), employee.permissions.canDelete && /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 33\n    }\n  }, \"Can Delete Employee\")), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    as: Link,\n    to: {\n      pathname: authedUserDetails.isadmin === false ? \"/user-update\" : \"/admin-update\",\n      state: {\n        employee\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 25\n    }\n  }, \"Update\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"danger\",\n    onClick: () => handleDelete(employee),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  }, \"Delete\")))));\n};\n\nexport default AdminEmployeeList;","map":{"version":3,"sources":["/home/vaniket_shashikant/other/course/React/assignment-ironlist/front-end/src/components/AdminEmployeeList.js"],"names":["React","useState","useEffect","Card","Button","Link","getUsers","deleteUser","AdminEmployeeList","props","employeeList","setEmployeeList","authedUserDetails","fetchUsers","response","console","log","data","status","alert","handleDelete","employee","_id","map","firstName","lastName","email","mobile","permissions","canRead","canCreate","canUpdate","canDelete","pathname","isadmin","state"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Card, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nimport { getUsers, deleteUser } from '../utils/api';\n\nconst AdminEmployeeList = (props) => {\n\n    const [employeeList, setEmployeeList] = useState([]);\n\n    const { authedUserDetails } = props;\n\n    async function fetchUsers() {\n        const response = await getUsers();\n        console.log(response.data);\n        if (response.status === 200) {\n            setEmployeeList(response.data);\n        }\n        else {\n            // onError(response.data)\n            alert('Some Error occured! Try again');\n        }\n    }\n\n    useEffect(() => {\n        console.log('admin list useeffect');\n        fetchUsers();\n    }, []);\n\n    const handleDelete = async (employee) => {\n        console.log(employee)\n        const response = await deleteUser(employee._id);\n        if (response.status == 200) {\n            alert('Deleted');\n            await fetchUsers();\n        }\n        else {\n            alert('Some error occured');\n        }\n    }\n\n    return (\n        <>\n            {employeeList.map(employee => (\n                <Card key={employee._id}>\n                    <Card.Body>\n                        <Card.Text>\n                            {`Name: ${employee.firstName} ${employee.lastName}`}\n                        </Card.Text>\n                        <Card.Text>\n                            {`Email: ${employee.email}`}\n                        </Card.Text>\n                        <Card.Text>\n                            {`Mobile: ${employee.mobile}`}\n                        </Card.Text>\n                        <Card.Text>\n                            Permissions:\n                        </Card.Text>\n                        <ul>\n                            {employee.permissions.canRead && (\n                                <li>Can View Employee List</li>\n                            )}\n                            {employee.permissions.canCreate && (\n                                <li>Can add a new Employee</li>\n                            )}\n                            {employee.permissions.canUpdate && (\n                                <li>Can Update Employee</li>\n                            )}\n                            {employee.permissions.canDelete && (\n                                <li>Can Delete Employee</li>\n                            )}\n                        </ul>\n                        <Button\n                            variant=\"primary\"\n                            as={Link}\n                            to={\n                                {\n                                    pathname: authedUserDetails.isadmin === false ? \"/user-update\" : \"/admin-update\",\n                                    state: {\n                                        employee\n                                    }\n                                }\n                            }\n                        >Update</Button>\n                        <Button variant=\"danger\" onClick={() => handleDelete(employee)}>Delete</Button>\n                    </Card.Body>\n                </Card>\n            ))}\n        </>\n    );\n\n\n}\n\nexport default AdminEmployeeList;\n\n"]},"metadata":{},"sourceType":"module"}