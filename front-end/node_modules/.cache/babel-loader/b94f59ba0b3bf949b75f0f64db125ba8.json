{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = 'http://localhost:4000/api/users';\nexport const getUsers = async () => {\n  try {\n    const response = await axios.get(baseUrl);\n    return response;\n  } catch (error) {\n    return error.response;\n  }\n};\nexport const authenticateUser = async credentials => {\n  try {\n    const response = await axios.post(`${baseUrl}/login`, {\n      email: credentials.email,\n      password: credentials.password\n    });\n    return response;\n  } catch (error) {\n    return error.response;\n  }\n};\nexport const getAuthedUser = async () => {\n  try {\n    let authedUser = localStorage.getItem('authedUser');\n\n    if (authedUser === null) {\n      console.log('null');\n      let user = {\n        id: null,\n        userToken: null,\n        userType: null\n      };\n      setLocalStorage(user);\n      return user;\n    } else {\n      let id = JSON.parse(authedUser).id;\n      let userDetails = await getUserDetails(id);\n      console.log(userDetails);\n      return {\n        userDetails,\n        authedUser: JSON.parse(authedUser)\n      };\n    }\n  } catch (error) {\n    alert('Some error occured! Try again');\n  }\n};\nexport const getUserDetails = async id => {\n  try {\n    const response = await axios.get(`${baseUrl}/${id}`);\n    return response.data;\n  } catch (error) {\n    return error.response;\n  }\n};\nexport const registerUser = async userDetails => {\n  console.log(userDetails);\n\n  try {\n    const response = await axios.post(baseUrl, userDetails);\n    return response;\n  } catch (error) {\n    return error.response;\n  }\n};\nexport const updateUserDetails = async (userDetails, id, updatorId) => {\n  try {\n    const response = await axios.put(`${baseUrl}/${id}`, { ...userDetails,\n      id: updatorId\n    });\n    return response;\n  } catch (error) {\n    return error.response;\n  }\n};\nexport const deleteUser = async id => {\n  try {\n    const response = await axios.delete(`${baseUrl}/${id}`);\n    return response;\n  } catch (error) {\n    return error.response;\n  }\n};\nexport const setLocalStorage = async user => {\n  try {\n    localStorage.clear();\n    return localStorage.setItem('authedUser', JSON.stringify(user));\n  } catch (error) {\n    alert('Some error occured! Try again');\n  }\n};\nexport const clearLocalStorage = () => {\n  return localStorage.clear();\n};","map":{"version":3,"sources":["/home/vaniket_shashikant/other/course/React/assignment-ironlist/front-end/src/utils/api.js"],"names":["axios","baseUrl","getUsers","response","get","error","authenticateUser","credentials","post","email","password","getAuthedUser","authedUser","localStorage","getItem","console","log","user","id","userToken","userType","setLocalStorage","JSON","parse","userDetails","getUserDetails","alert","data","registerUser","updateUserDetails","updatorId","put","deleteUser","delete","clear","setItem","stringify","clearLocalStorage"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nconst baseUrl = 'http://localhost:4000/api/users';\n\nexport const getUsers = async () => {\n    try {\n        const response = await axios.get(baseUrl);\n        return response;\n    }\n    catch (error) {\n        return error.response;\n    }\n}\n\nexport const authenticateUser = async (credentials) => {\n    try {\n        const response = await axios.post(`${baseUrl}/login`, {\n            email: credentials.email,\n            password: credentials.password,\n        })\n        return response;\n    }\n    catch (error) {\n        return error.response;\n    }\n}\n\nexport const getAuthedUser = async () => {\n    try {\n        let authedUser = localStorage.getItem('authedUser');\n        if (authedUser === null) {\n            console.log('null')\n            let user = {\n                id: null,\n                userToken: null,\n                userType: null,\n            }\n            setLocalStorage(user);\n            return user;\n        }\n        else {\n            let id = JSON.parse(authedUser).id;\n            let userDetails = await getUserDetails(id);\n            console.log(userDetails)\n            return {\n                userDetails,\n                authedUser: JSON.parse(authedUser)\n            }\n        }\n    }\n    catch (error) {\n        alert('Some error occured! Try again');\n    }\n}\n\nexport const getUserDetails = async (id) => {\n    try {\n        const response = await axios.get(`${baseUrl}/${id}`)\n        return response.data;\n    }\n    catch (error) {\n        return error.response;\n    }\n}\n\nexport const registerUser = async (userDetails) => {\n    console.log(userDetails)\n    try {\n        const response = await axios.post(baseUrl, userDetails)\n        return response;\n    }\n    catch (error) {\n        return error.response;\n    }\n}\n\nexport const updateUserDetails = async (userDetails, id, updatorId) => {\n    try {\n        const response = await axios.put(`${baseUrl}/${id}`, {\n            ...userDetails,\n            id: updatorId\n        })\n        return response;\n    }\n    catch (error) {\n        return error.response;\n    }\n}\n\nexport const deleteUser = async (id) => {\n    try {\n        const response = await axios.delete(`${baseUrl}/${id}`)\n        return response;\n    }\n    catch (error) {\n        return error.response;\n    }\n}\n\nexport const setLocalStorage = async (user) => {\n    try {\n        localStorage.clear();\n        return localStorage.setItem('authedUser', JSON.stringify(user));\n    }\n    catch (error) {\n        alert('Some error occured! Try again');\n    }\n}\n\n\nexport const clearLocalStorage = () => {\n    return localStorage.clear();\n}\n\n"]},"metadata":{},"sourceType":"module"}