{"ast":null,"code":"var _jsxFileName = \"/home/vaniket_shashikant/other/course/React/assignment-ironlist/front-end/src/components/AdminEmployeeList.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Card, Button, Form, Modal } from 'react-bootstrap';\nimport AdminUpdateModal from './AdminUpdateModal';\nimport UserUpdateModal from './UserUpdateModal';\nimport { getUsers } from '../utils/api';\n\nfunction UpdateModal(props) {\n  return /*#__PURE__*/React.createElement(Modal, Object.assign({}, props, {\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, props.authedUserDetails.isadmin === false ? /*#__PURE__*/React.createElement(AdminUpdateModal, {\n    employee: props.employee,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 25\n    }\n  }) : /*#__PURE__*/React.createElement(UserUpdateModal, {\n    employee: props.employee,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: props.onHide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, \"Close\")));\n}\n\nconst AdminEmployeeList = props => {\n  const [modalShow, setModalShow] = useState(false);\n  const [employeeList, setEmployeeList] = useState([]);\n  const {\n    authedUserDetails\n  } = props;\n\n  const handleModal = () => {\n    setModalShow(!modalShow);\n  };\n\n  useEffect(() => {\n    console.log('admin list useeffect');\n\n    async function fetchUsers() {\n      const response = await getUsers();\n      console.log(response.data);\n\n      if (response.status === 200) {\n        setEmployeeList(response.data);\n      } else {\n        // onError(response.data)\n        alert('Some Error occured! Try again');\n      }\n    }\n\n    fetchUsers();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, employeeList.map(employee => /*#__PURE__*/React.createElement(Card, {\n    key: employee._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }, `Name: ${employee.firstName} ${employee.lastName}`), /*#__PURE__*/React.createElement(Card.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  }, `Email: ${employee.email}`), /*#__PURE__*/React.createElement(Card.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 25\n    }\n  }, `Mobile: ${employee.mobile}`), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: handleModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  }, \"Update\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  }, \"Delete\")), modalShow && /*#__PURE__*/React.createElement(UpdateModal, {\n    authedUserDetails: authedUserDetails,\n    employee: employee,\n    show: modalShow,\n    onHide: () => setModalShow(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }\n  }))));\n};\n\nexport default AdminEmployeeList;","map":{"version":3,"sources":["/home/vaniket_shashikant/other/course/React/assignment-ironlist/front-end/src/components/AdminEmployeeList.js"],"names":["React","useState","useEffect","Card","Button","Form","Modal","AdminUpdateModal","UserUpdateModal","getUsers","UpdateModal","props","authedUserDetails","isadmin","employee","onHide","AdminEmployeeList","modalShow","setModalShow","employeeList","setEmployeeList","handleModal","console","log","fetchUsers","response","data","status","alert","map","_id","firstName","lastName","email","mobile"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,IAAvB,EAA6BC,KAA7B,QAA0C,iBAA1C;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AAEA,SAASC,QAAT,QAAyB,cAAzB;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACxB,sBACI,oBAAC,KAAD,oBACQA,KADR;AAEI,IAAA,IAAI,EAAC,IAFT;AAGI,uBAAgB,+BAHpB;AAII,IAAA,QAAQ,MAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAMI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,KAAK,CAACC,iBAAN,CAAwBC,OAAxB,KAAoC,KAApC,gBAEO,oBAAC,gBAAD;AAAkB,IAAA,QAAQ,EAAEF,KAAK,CAACG,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFP,gBAKO,oBAAC,eAAD;AAAiB,IAAA,QAAQ,EAAEH,KAAK,CAACG,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANZ,CANJ,eAiBI,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEH,KAAK,CAACI,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,CAjBJ,CADJ;AAuBH;;AAGD,MAAMC,iBAAiB,GAAIL,KAAD,IAAW;AACjC,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACkB,YAAD,EAAeC,eAAf,IAAkCnB,QAAQ,CAAC,EAAD,CAAhD;AAEA,QAAM;AAAEW,IAAAA;AAAF,MAAwBD,KAA9B;;AAEA,QAAMU,WAAW,GAAG,MAAM;AACtBH,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACH,GAFD;;AAIAf,EAAAA,SAAS,CAAC,MAAM;AACZoB,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;;AACA,mBAAeC,UAAf,GAA4B;AACxB,YAAMC,QAAQ,GAAG,MAAMhB,QAAQ,EAA/B;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAYE,QAAQ,CAACC,IAArB;;AACA,UAAID,QAAQ,CAACE,MAAT,KAAoB,GAAxB,EAA6B;AACzBP,QAAAA,eAAe,CAACK,QAAQ,CAACC,IAAV,CAAf;AACH,OAFD,MAGK;AACD;AACAE,QAAAA,KAAK,CAAC,+BAAD,CAAL;AACH;AACJ;;AAEDJ,IAAAA,UAAU;AACb,GAfQ,EAeN,EAfM,CAAT;AAiBA,sBACI,0CACKL,YAAY,CAACU,GAAb,CAAiBf,QAAQ,iBACtB,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,QAAQ,CAACgB,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM,SAAQhB,QAAQ,CAACiB,SAAU,IAAGjB,QAAQ,CAACkB,QAAS,EADtD,CADJ,eAII,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM,UAASlB,QAAQ,CAACmB,KAAM,EAD9B,CAJJ,eAOI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM,WAAUnB,QAAQ,CAACoB,MAAO,EADhC,CAPJ,eAUI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,OAAO,EAAEb,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ,eAWI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ,CADJ,EAcKJ,SAAS,iBACN,oBAAC,WAAD;AACI,IAAA,iBAAiB,EAAEL,iBADvB;AAEI,IAAA,QAAQ,EAAEE,QAFd;AAGI,IAAA,IAAI,EAAEG,SAHV;AAII,IAAA,MAAM,EAAE,MAAMC,YAAY,CAAC,KAAD,CAJ9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfR,CADH,CADL,CADJ;AA+BH,CA1DD;;AA4DA,eAAeF,iBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Card, Button, Form, Modal } from 'react-bootstrap';\nimport AdminUpdateModal from './AdminUpdateModal';\nimport UserUpdateModal from './UserUpdateModal';\n\nimport { getUsers } from '../utils/api';\n\nfunction UpdateModal(props) {\n    return (\n        <Modal\n            {...props}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n        >\n            <Modal.Body>\n                {props.authedUserDetails.isadmin === false ?\n                    (\n                        <AdminUpdateModal employee={props.employee} />\n                    ) :\n                    (\n                        <UserUpdateModal employee={props.employee} />\n                    )\n                }\n\n            </Modal.Body>\n            <Modal.Footer>\n                <Button onClick={props.onHide}>Close</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n}\n\n\nconst AdminEmployeeList = (props) => {\n    const [modalShow, setModalShow] = useState(false);\n    const [employeeList, setEmployeeList] = useState([]);\n\n    const { authedUserDetails } = props;\n\n    const handleModal = () => {\n        setModalShow(!modalShow);\n    }\n\n    useEffect(() => {\n        console.log('admin list useeffect');\n        async function fetchUsers() {\n            const response = await getUsers();\n            console.log(response.data);\n            if (response.status === 200) {\n                setEmployeeList(response.data);\n            }\n            else {\n                // onError(response.data)\n                alert('Some Error occured! Try again');\n            }\n        }\n\n        fetchUsers();\n    }, []);\n\n    return (\n        <>\n            {employeeList.map(employee => (\n                <Card key={employee._id}>\n                    <Card.Body>\n                        <Card.Text>\n                            {`Name: ${employee.firstName} ${employee.lastName}`}\n                        </Card.Text>\n                        <Card.Text>\n                            {`Email: ${employee.email}`}\n                        </Card.Text>\n                        <Card.Text>\n                            {`Mobile: ${employee.mobile}`}\n                        </Card.Text>\n                        <Button variant=\"primary\" onClick={handleModal}>Update</Button>\n                        <Button variant=\"danger\">Delete</Button>\n                    </Card.Body>\n                    {modalShow && (\n                        <UpdateModal\n                            authedUserDetails={authedUserDetails}\n                            employee={employee}\n                            show={modalShow}\n                            onHide={() => setModalShow(false)}\n                        />\n                    )}\n                </Card>\n            ))}\n        </>\n    );\n\n\n}\n\nexport default AdminEmployeeList;\n\n"]},"metadata":{},"sourceType":"module"}